
//**************************
// Вспомогательные функции
//**************************
namespace GOTHIC_ENGINE {


// Функция вывода отладочных сообщений в окно консоли Union
// bCreateEndl - сделать конец строки
void dllPrint(const string& text, bool bCreateEndl = true)
{
	// выделяем название модуля тёмно-жёлтым цветом,
	// добавляем к названию модуля расширение и отступ для текста сообщения,
	// затем белым цветом выводим сообщение в консоль
	cmd << Col16(CMD_YELLOW) << CPlugin::GetCurrentPlugin()->GetName() << "	" << Col16(CMD_WHITE) << text;

	// если нужен конец строки, создаём
	if (bCreateEndl) cmd << endl;
}



// Проверяет существование текстуры внутри VDF томов, а также во внутренних каталогах игры
// texName - название текстуры (можно писать без ".TGA").
bool TextureIsExist(const string& texName)
{
	// если имя файла пустое
	if (texName.IsEmpty())
		// выходим из функции
		return false;

	// объявляем переменную класса для работы с файлами и их путями
	zFILE_FILE fileTex = zFILE_FILE(texName);
	
	// извлекаем только название файла (без расширения)
	string fileName = fileTex.GetFilename();
	
	// поднимаем в ВЕРХНИЙ регистр
	fileName.Upper();
	
	// объявляем окончание для скомпилированных текстур
	string cTEX = "-C.TEX";

	// выделяем память под символы (используется как буфер для найденных файлов)
	char foundFiles[1024];

	// пытаемся найти скомпилированные файлы
	BOOL bFound = vdf_searchfile((fileName + cTEX).ToChar(), foundFiles);

	// если скомпилированные текстуры найдены
	// получаем строку с найденными файлами, разделёнными знаком "|" внутри переменной "foundFiles"
	if (bFound)
	{
		// переводим строку с файлами в формат для работы
		string ffiles = foundFiles;

		// начинаем с первого файла
		int idx = 1;

		// путь, по которому должен находиться искомый файл (используется для сравнения)
		string compareFile = string(zoptions->GetDirString(zTOptionPaths::DIR_COMPILED_TEXTURES)) + fileName + cTEX;

		// перебираем все названия файлов в строке
		while(true) 
		{
			// берём первый файл
			string file = string(ffiles.GetWord("|", idx));

			// если строка пустая
			if (file.IsEmpty())
				// мы достигли конца строки, выходим из цикла
				break;
			// иначе:
			// добавляем к названию "\"
			file = string("\\") + file;
			
			// если файлы равны, значит текстура найдена
			if (file.Compare(compareFile))
				// выходим из функции
				return true;
			// иначе:
			// переходим к следующему найденному файлу
			idx++;
		}

		// если прошли цикл до конца, значит компил. файлы не найдены
	}

	// пытаемся найти TGA файлы
	// если хоть какие-нибудь TGA файлы будут найдены, они скомпилируются в -C.TEX файлы. Возвращаем успешный результат.
	// или если ни один подходящий TGA файл не будет найден, значит искомый файл не найден. Возвращаем безуспешный результат.
	return vdf_searchfile((fileName + string(".TGA")).ToChar(), foundFiles);
}

	
} /* end namespace */